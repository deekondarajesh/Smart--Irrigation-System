#include "arduino_secrets.h"
/*
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/546d7d57-80cc-4e63-abb5-18bb47874af4

 
  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  float temperature;
  int light;
  int moisture;
  bool moistWarn;
  bool tempWarn;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

//IoT cloud
#include "thingProperties.h"
//Temperature sensor
#include <OneWire.h>
#include <DallasTemperature.h>
#define tempPin 6
OneWire oneWire(tempPin);
DallasTemperature sensors(&oneWire);
//Moisture
#define moistPin A2
#define motorPin 5
//Serial communication
const byte tx=14;
const byte rx=13;
byte serialResponse = 0;
byte menu = 0;
int datarx = 1;

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); //while (!Serial);//Wait until serial != false
  
  //Moisture
  pinMode(motorPin, OUTPUT);
  //Serial communication
  pinMode(tx, OUTPUT);
  pinMode(rx, INPUT);
  Serial1.begin(9600);
  //Temperature
  sensors.begin();

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);

  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
*/
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  // Your code here
  
  //Temperature
  sensors.requestTemperatures();
  temperature = sensors.getTempCByIndex(0);
  if(temperature < 3 || temperature > 35){ //Most plants are not healthy outside 3 and 35 degrees celcius.
    tempWarn = true; //If tempWarn is true, a temperature warning light will turn on in IoT dashboard.
  }
  else{
    tempWarn = false;
  }

  //Moisture
  moisture = analogRead(moistPin)/9;// Divided by 9 to give persentage, 9=900/100, 900 is max value.
  if(moisture > 80){ //At 80 plant is waterlogged, needs to be moved to pot with drainage.
    moistWarn = true;
  }
  else if (moisture < 35){ //At 35 plant is dry and needs watered.
    moistWarn = true; //If moistWarn is true, a moisture warning light will turn on in IoT dashboard.
    digitalWrite(motorPin, HIGH); //Waters the plant for 2.5 seconds.
    delay(2500);
    digitalWrite(motorPin,LOW);
  }
  else{
    moistWarn = false;
  }

  //Light
  light = analogRead(A1)/10;//Divided by 10 to give persentage, 10=1000/100, 1000 is max value.

  //Serial1 communication
  if (Serial1.available() > 0){//Check if an information request has been sent from the other board
    delay(50);
    menu = Serial1.read();//Read which information has been requested
    Serial.print("Menu ");
    Serial.println(menu);
  }
  switch (menu){ //Fetch requested information
    case 4: //Temperature
      serialResponse =(byte)temperature;
      break;
    case 5: //Moisture
      serialResponse =(byte)moisture;
      break;
    case 6: //Light
      serialResponse =(byte)light;
      break;
    default:
      break;
  }
  byte msg[2]; //For storing data to be transmitted.
  msg[0] = menu; //Identify which information is being returned.
  msg[1] = serialResponse; //Value of information being returned.
  Serial1.write(msg, 2); //Send response.
  Serial.print((byte)serialResponse);
  delay(500);
}
